<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GetEventsMapper">
    <resultMap id="getEvents" type="Events">
        <result property="idEvents" column="idTEvents"/>
        <result property="eventName" column="EventName"/>
        <result property="eventLocation" column="LocationName"/>
        <result property="eventSells" column="SellName"/>
        <result property="eventInfo" column="InfoEvent"/>
        <result property="eventGroup" column="GroupName"/>
        <result property="eventImage" column="ImageEvent"/>
        <result property="eventDate" column="DateEvents"/>
    </resultMap>
    
    
    <select id="getEventsList" resultMap="getEvents">
        SELECT e.idTEvents, e.EventName, e.InfoEvent, e.ImageEvent, e.DateEvents, g.GroupName,l.LocationName, s.SellName
        FROM TEvents as e, TGroup as g, TLocation as l, TSells as s
        WHERE e.idGroup = g.idTGroup and e.idLocation = l.idTLocation and e.idSells = s.idTSells
    </select>  
    
    <select id="getListForEventName" parameterType ="Events" resultMap="getEvents" >
        SELECT e.idTEvents, e.EventName, e.InfoEvent, e.ImageEvent, e.DateEvents, g.GroupName,l.LocationName, s.SellName
        FROM TEvents as e, TGroup as g, TLocation as l, TSells as s
        WHERE e.EventName like #{eventName} and e.idGroup = g.idTGroup and e.idLocation = l.idTLocation and e.idSells = s.idTSells
    </select>  
    
    <select id="getListForLocation" parameterType ="Events" resultMap="getEvents" >
        SELECT e.idTEvents, e.EventName, e.InfoEvent, e.ImageEvent, e.DateEvents, g.GroupName,l.LocationName, s.SellName
        FROM TEvents as e, TGroup as g, TLocation as l, TSells as s
        WHERE e.idGroup = g.idTGroup and e.idLocation = l.idTLocation and e.idSells = s.idTSells and l.LocationName like #{eventLocation}
    </select> 
    
    <select id="getListForSell" parameterType ="Events" resultMap="getEvents">
        SELECT e.idTEvents, e.EventName, e.InfoEvent, e.ImageEvent, e.DateEvents, g.GroupName,l.LocationName, s.SellName
        FROM TEvents as e, TGroup as g, TLocation as l, TSells as s
        WHERE e.idGroup = g.idTGroup and e.idLocation = l.idTLocation and e.idSells = s.idTSells and s.SellName like #{eventSells}
    </select> 
    
    <select id="getListForGroup" parameterType ="Events" resultMap="getEvents">
        SELECT e.idTEvents, e.EventName, e.InfoEvent, e.ImageEvent, e.DateEvents, g.GroupName,l.LocationName, s.SellName
        FROM TEvents as e, TGroup as g, TLocation as l, TSells as s
        WHERE e.idGroup = g.idTGroup and e.idLocation = l.idTLocation and e.idSells = s.idTSells and g.GroupName like #{eventGroup}
    </select>    
  <!--  
    <update id ="updateOne" parameterType ="Users">
        UPDATE SysUsers as user
        SET user.login = #{login}, user.psw = #{psw}, user.firstName = #{firstName}, user.lastName = #{lastName}, user.idRole = #{idRole}         
        WHERE user.id=#{id};
    </update>
    
    <delete id="deleteOne" parameterType="int">
        DELETE 
        FROM SysUsers 
        WHERE id=#{id};
    </delete>    
    
    <insert id = "insertOne" parameterType = "Users">
        INSERT INTO SysUsers (login, psw, firstName, lastName, idRole) 
        VALUES (#{login}, #{psw}, #{firstName}, #{lastName}, #{idRole});
    </insert>
    
    <select id="getList" resultMap="getUsers">
        SELECT user.id, user.login, user.psw,user.firstName,user.lastName,role.nameRole,role.level 
        FROM SysUsers as user, SysRole as role 
        WHERE user.idRole=role.id;
    </select> -->
      
</mapper>